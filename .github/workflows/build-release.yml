name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-xray
  CACHE_DIR: ~/cache

jobs:
  release:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/x86/64
            sdk_name: -sdk-x86-64_gcc-

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      CCACHE_DIR: ~/.ccache
      CONFIG_CCACHE: y
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate release tag
        id: generate_tag
        run: |
          pkg_version=$(grep -oP 'PKG_VERSION:=\K.*' core/Makefile)
          pkg_release=$(grep -oP 'PKG_RELEASE:=\K.*' core/Makefile)
          echo "tag=${PACKAGE_NAME}_${pkg_version}-${pkg_release}" >> $GITHUB_OUTPUT

      - name: Prepare Cache Key
        id: cache_key
        run: echo "timestamp=$(date +"%s")" >> $GITHUB_OUTPUT

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CACHE_DIR }}
            ${{ env.CCACHE_DIR }}
          key: openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-${{ steps.cache_key.outputs.timestamp }}
          restore-keys: |
            openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-
      - name: Install Dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ccache gettext libncurses5-dev xsltproc p7zip-full zstd autotools-dev automake
      - name: Create Directories
        run: |
          CACHE_DIR_SDK="$(eval echo "$CACHE_DIR/sdk")"
          CACHE_DIR_DL="$(eval echo "$CACHE_DIR/dl")"
          CACHE_DIR_FEEDS="$(eval echo "$CACHE_DIR/feeds")"
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV
          {
            echo "CACHE_DIR_SDK=$CACHE_DIR_SDK"
            echo "CACHE_DIR_DL=$CACHE_DIR_DL"
            echo "CACHE_DIR_FEEDS=$CACHE_DIR_FEEDS"
          } | tee -a $GITHUB_ENV >(cut -d'=' -f2 | xargs mkdir -p)
      - name: Download and Unzip SDK
        run: |
          cd "$CACHE_DIR_SDK"
          echo "::group::Download SDK"
          if ! ( wget -q -O - "$SDK_URL_PATH/sha256sums" | grep -- "$SDK_NAME" > sha256sums.small 2>/dev/null ) ; then
            echo "::error::Can not find ${SDK_NAME} file in sha256sums."
            exit 1
          fi
          SDK_FILE="$(cat sha256sums.small | cut -d' ' -f2 | sed 's/*//g')"
          if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
            wget -O "$SDK_FILE" "$SDK_URL_PATH/$SDK_FILE"
            if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
              echo "::error::SDK can not be verified!"
              exit 1
            fi
          fi
          echo "::endgroup::"
          echo "::group::Decompress SDK"
          cd -
          tarball="$CACHE_DIR_SDK/$SDK_FILE"
          file "$tarball"
          {
            if [[ "$tarball" == *.tar.gz || "$tarball" == *.tgz ]]; then
              gunzip -c "$tarball"
            elif [[ "$tarball" == *.tar.bz2 || "$tarball" == *.tbz2 ]]; then
              bzip -c "$tarball"
            elif [[ "$tarball" == *.tar.xz || "$tarball" == *.txz ]]; then
              unxz "$tarball"
            elif [[ "$tarball" == *.tar.zst || "$tarball" == *.tzst ]]; then
              zstd --stdout -d "$tarball"
            elif [[ "$tarball" == *.tar ]]; then
              cat "$tarball"
            else
              7z x "$tarball" -so
            fi
          } | tar -C "$SDK_HOME" -xvf - --strip=1
          echo "::endgroup::"
          echo "::group::Cleanup SDK"
          cd "$SDK_HOME"
          test -d "dl" && rm -rf "dl" || true
          test -d "feeds" && rm -rf "feeds" || true
          ln -s "$CACHE_DIR_DL" "dl"
          ln -s "$CACHE_DIR_FEEDS" "feeds"
          cp feeds.conf.default feeds.conf
          sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
          sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
          sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
          sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
          cd -
          echo "::endgroup::"
      - name: Update and Install Packages
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds update -a
          ln -s "${{ github.workspace }}" "package/$PACKAGE_NAME"
          ./scripts/feeds install -a
          cd -
      - name: Build Packages
        run: |
          cd "$SDK_HOME"
          make defconfig
          make tools/install
          make toolchain/install
          make package/${PACKAGE_NAME}/status/{clean,compile} V=s
          find "$SDK_HOME/bin/" -type f -name "*.ipk" -o -name "*.apk" -exec ls -lh {} \;
          cd -
      - name: Copy Bin Files
        run: |
          find "$SDK_HOME/bin/" -type f -name "${PACKAGE_NAME}*.ipk" -o -name "${PACKAGE_NAME}*.apk" -exec cp {} "${{ github.workspace }}" \;
          find "${{ github.workspace }}" -type f -name "*.ipk" -o -name "*.apk" -exec ls -lh {} \;
      - name: Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.generate_tag.outputs.tag }}-
          files: |
            *.ipk
            *.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
